using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MalwareGen
{
    public partial class frmConfirm : MetroFramework.Forms.MetroForm
    {
        public frmConfirm(String malName,String template)
        {
            
            InitializeComponent();
            lbmalName.Text = malName;
            tbTemplate.Text = template;
            //Selected items init
            lbModules.DisplayMember = "MName";
            foreach (Modules mod in Controller.getlsModules())
            {
                lbModules.Items.Add(mod);
            }
            //Options listview init
            lvOptions.Columns.Add("Options", 100);
            lvOptions.Columns.Add("Values", 200);
            lvOptions.View = View.Details;
        }

        private void showModuleOptions(Modules mod)
        {
            gbModule.Text = mod.MName;
            lvOptions.Clear();
            lvOptions.Columns.Add("Options", 100);
            lvOptions.Columns.Add("Values", 200);
            lvOptions.View = View.Details;
            if (mod != null)
            {
                //Inputs
                foreach (KeyValuePair<String, String> item in mod.Inputs)
                {
                    ListViewItem _list = new ListViewItem(item.Key);
                    ListViewItem.ListViewSubItem _sublist = new ListViewItem.ListViewSubItem(_list, item.Value);
                    _list.SubItems.Add(_sublist);
                    lvOptions.Items.Add(_list);
                }
                //Others option
                if(mod.exploitType!=null)
                    if (mod.exploitType.ToLower() == "rce")
                    {
                        ListViewItem _list = new ListViewItem("Spreader");
                        ListViewItem.ListViewSubItem _sublist = new ListViewItem.ListViewSubItem(_list, mod.Spreader);
                        _list.SubItems.Add(_sublist);
                        lvOptions.Items.Add(_list);

                    }
                //lvInputs.Update();
            }

        }
        private void lvOptions_ItemActivate(object sender, EventArgs e)
        {
            ListView.SelectedListViewItemCollection test = this.lvOptions.SelectedItems;
            ListViewItem item = test[0];
            if (item.SubItems[0].Text == "Spreader"|| item.SubItems[0].Text == "Scanner")
            {
                MessageBox.Show("Please cancel this \"Confirmation form\" to re-choose Spreader/Scanner");
                return;
            }
                
            if (item.SubItems[0].Text == "Argv"&& item.SubItems[1].Text != "")
                return;
            Modules tmp = (Modules)lbModules.SelectedItem;
            Controller.addInputValue(ref tmp, item.SubItems[0].Text, item.SubItems[1].Text);
            lbModules.SelectedItem = tmp;
            showModuleOptions((Modules)lbModules.SelectedItem);
        }
        private void lbModules_SelectedIndexChanged(object sender, EventArgs e)
        {
            showModuleOptions((Modules)lbModules.SelectedItem);
        }
    }

}
