using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Windows.Forms;
using System.Xml;

namespace MalwareGen
{
    class Controller
    {
        private List<Modules> lsModules;

        public static void BuildTree(DirectoryInfo directoryInfo, TreeNodeCollection addInMe)
        {
            TreeNode curNode = addInMe.Add(directoryInfo.Name);

            //foreach (FileInfo file in directoryInfo.GetFiles())
            //{
               
            //    curNode.Nodes.Add(file.FullName, file.Name);
            //}
            foreach (DirectoryInfo subdir in directoryInfo.GetDirectories())
            {
                BuildTree(subdir, curNode.Nodes);
            }
        }
        public static Modules getModuleGeneral(string path)
        {
            Modules ret = new Modules();
            XmlDocument document = new XmlDocument();
            document.Load(path);
            XmlNodeList nodes = document.DocumentElement.ChildNodes;
            foreach (XmlNode childnode in nodes)
            {
                if (childnode.Name == "Name")
                    ret.MName = childnode.InnerText;
                if (childnode.Name == "Type")
                    ret.MType = childnode.InnerText;
                if (childnode.Name == "Author")
                    ret.Author = childnode.InnerText;
                if (childnode.Name == "Header")
                    ret.Header = childnode.InnerText;
                if (childnode.Name == "Files")
                    foreach (XmlNode node in childnode.ChildNodes)
                    {
                        string tmp = node.InnerText;
                        ret.Files.Add(tmp);
                    }
                if (childnode.Name == "Info")
                    ret.Info = childnode.InnerText;
            }
            return ret;
        }
        public static void generateHeader()
        {

        }

    }
}
