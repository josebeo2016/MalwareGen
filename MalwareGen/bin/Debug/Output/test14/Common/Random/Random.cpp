#include "Random.h"
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
std::string RandomStr (const int len) {
	std::string ret="";
	static const char alphanum[] =
		"0123456789"
		"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
		"abcdefghijklmnopqrstuvwxyz";
	srand(time(0));
	for (int i = 0; i < len; ++i) {
		
		ret += alphanum[rand() % (sizeof(alphanum) - 1)];
int isnRDww93hF = 0x30f2c3e;
int ie9EnPbuZts = 0x8b41dc2;
int iLINNdlZw0T = 0xca70342;
int iICTBcYiUw3 = 0x0ebf5a7;
int iihuA0q6N0w = 3;
switch(iihuA0q6N0w)
{
    case 0:
        isnRDww93hF = ie9EnPbuZts - 0xbdffc72 * iLINNdlZw0T / 100;
        ie9EnPbuZts = 0xca70342 - 5 +  0xca70342 - 6 * ie9EnPbuZts / 10 + 25;
        iLINNdlZw0T = isnRDww93hF * 0x12 + iICTBcYiUw3 * 0x15 + 0x0ebf5a7 / 13 + 0xbdffc72 + 555;
        iICTBcYiUw3 = 0x30f2c3e - 21 + 11 * 1996 - ie9EnPbuZts + 14520538 - iLINNdlZw0T - 14520692 + 0x8b41dc2 - 97;
        break;
    case 1:
        isnRDww93hF = ie9EnPbuZts - 25 + 0x30f2c3e - 40 + 0xca70342 % 10 + 2;
        iLINNdlZw0T = iLINNdlZw0T - 0xff % 3 - iICTBcYiUw3 * 10 + 0xbdffc72 / 2 - 10 + 0x8b41dc2 - 5;
        iICTBcYiUw3 = 0x30f2c3e % 0xbdffc72 ^ 33 + 0xca70342 * 0x12 - 30 + 0xca70342 + 23;
        ie9EnPbuZts = ie9EnPbuZts + 321 + iLINNdlZw0T * 10 * ie9EnPbuZts / 10 / 2 + 0xbdffc72 * 0x60;
        break;
    case 2:
        isnRDww93hF = ie9EnPbuZts - 45 - iLINNdlZw0T * 46 + 0x30f2c3e / 0xdade;
        ie9EnPbuZts = ie9EnPbuZts + 0xbdffc72 - iLINNdlZw0T * 0x8b41dc2 - 3;
        iLINNdlZw0T = 0x8b41dc2 - 0x1 + isnRDww93hF * 0x2 - 0xbdffc72 / 0x3 + 0xca70342;
        iICTBcYiUw3 = isnRDww93hF - 0x4 * 0x30f2c3e + 0x1234 - 0x4567 + 0xcafe + ie9EnPbuZts % 0x432 / 0x0ebf5a7 - 0x23;
        break;
    case 3:
        ie9EnPbuZts = iICTBcYiUw3 * 2 * 0x8b41dc2 - 4 + 0xbdffc72 + 12 + 34 + 0x30f2c3e;
        iLINNdlZw0T = ie9EnPbuZts - 43 + 0xca70342 * 3040 - 0x8b41dc2 % 10 + 1 - 0xca70342;
        iICTBcYiUw3 = 0xca70342 - 33 + isnRDww93hF * 0x25 + 0x30f2c3e - 3004 + 0x8b41dc2;
        isnRDww93hF = 0x30f2c3e + 2905 % ie9EnPbuZts * 1996 + 0x0ebf5a7 - 70 * 0xbdffc72;
        break;
    case 4:
        iICTBcYiUw3 = ie9EnPbuZts - 36 +0xbdffc72 * 2001 - iLINNdlZw0T / 234 + 0x7;
        isnRDww93hF = iICTBcYiUw3 - 0xabcedf + 0x8b41dc2 * 0xa2bc5 + iICTBcYiUw3 / 0x123 + 0x30f2c3e;
        iLINNdlZw0T = isnRDww93hF - 0x124 + 23 / ie9EnPbuZts / 3 / 2 + iLINNdlZw0T + 29 - 0x8b41dc2 + 100;
        ie9EnPbuZts = 0x8b41dc2 - 70 + 70  + 0x30f2c3e / 2 + 423 - 0x30f2c3e / 7749 % 0x1234;
        break;
    case 5:
        ie9EnPbuZts = ie9EnPbuZts - 9981 % isnRDww93hF + 111 - iLINNdlZw0T / 224 % 0xca70342;
        iLINNdlZw0T = iLINNdlZw0T - 339 - iLINNdlZw0T * 4416 / 0xbdffc72 + 5525 + 0x8b41dc2 % 10;
        iICTBcYiUw3 = iICTBcYiUw3 - 6636 + 0x8b41dc2 * 7749 + 1 - ie9EnPbuZts * 8864 / 0xfecba;
        isnRDww93hF = 0xbdffc72 - 9981 % 0x30f2c3e % 10 % 1010100 - 0x30f2c3e - 23 -  0xbdffc72 - 2500;
        break;
}
iihuA0q6N0w = iICTBcYiUw3 - 0xaa + 0xca70342 * 46 - 15 / iLINNdlZw0T + 11 - 0x30f2c3e;
iihuA0q6N0w = iihuA0q6N0w - 70 * 55 - iLINNdlZw0T ^ 0x99 - 0x567498 % 0x30f2c3e % 2 - 234 + 0x8b41dc2;

	}
	return ret;
}