#include <Windows.h>
#include "adbg_CheckRemoteDebuggerPresent.h"

#define SHOW_DEBUG_MESSAGES

// =======================================================================
// Debugging helper
// =======================================================================
void DBG_MSG(char* message)
{
#ifdef SHOW_DEBUG_MESSAGES
	printf("[MSG-0x]: %s\n", message);
	printf("GAME OVER!");
#endif
}

// =======================================================================
// Memory Checks
// These checks focus on Windows structures containing information which 
// can reveal the presence of a debugger. 
// =======================================================================


/* 
 * // adbg_CheckRemoteDebuggerPresent()
 *
 * // How it works:
 * ...
 * 
 * // Indication: 
 * Look for this imported function or calls to GetProcAddress().
 * CheckRemoteDebuggerPresent is similar to IsDebuggerPresent,
 * except. It allows an applicaion to query the debugging state of
 * another application via a process handle. The BOOL return value
 * is used to determine if the process (hProcess) is being debugged.
 *
 * // Bypass: 
 * Set a breakpoint on CheckRemoteDebuggerPresent(), single step, 
 * then switch the return value to 0.
 */
void adbg_CheckRemoteDebuggerPresent(void)
{
	HANDLE hProcess = INVALID_HANDLE_VALUE;
	BOOL found = FALSE;
		
	hProcess = GetCurrentProcess();
	CheckRemoteDebuggerPresent(hProcess, &found);

	if (found)
	{
		DBG_MSG("Caught by CheckRemoteDebuggerPresent!");
		exit(1);
	}
}

