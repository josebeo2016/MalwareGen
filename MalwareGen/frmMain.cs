using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;


namespace MalwareGen
{
    public partial class frmMain : Form
    {
        DirectoryInfo ModuleDirs = new DirectoryInfo(@"Modules");
        public frmMain()
        {
            InitializeComponent();
            
            if (ModuleDirs.Exists)
            {
                treeModules.AfterSelect += treeModules_AfterSelect;
                Controller.BuildTree(ModuleDirs, treeModules.Nodes);
            }
        }

        private void cbExploit_CheckedChanged(object sender, EventArgs e)
        {
            if (cbExploit.Checked)
            {

                tb_ExploitNums.Enabled = true;
            }
            else
            {

                tb_ExploitNums.Enabled = false;
            }
        }

        private void cbNinja_CheckStateChanged(object sender, EventArgs e)
        {
            if (cbNinja.Checked)
            {

                tb_NinjaNums.Enabled = true;
            }
            else
            {

                tb_NinjaNums.Enabled = false;
            }
        }

        private void cbSpreader_CheckedChanged(object sender, EventArgs e)
        {
            if (cbSpreader.Checked)
            {

                tb_SpreaderNums.Enabled = true;
            }
            else
            {

                tb_SpreaderNums.Enabled = false;
            }
        }

        private void cbPost_CheckedChanged(object sender, EventArgs e)
        {
            if (cbPost.Checked)
            {

                tb_PostNums.Enabled = true;
            }
            else
            {

                tb_PostNums.Enabled = false;
            }
        }

        private void cbControl_CheckedChanged(object sender, EventArgs e)
        {
            if (cbControl.Checked)
            {

                tb_ControlNums.Enabled = true;
            }
            else
            {

                tb_ControlNums.Enabled = false;
            }
        }

        private void frmMain_Load(object sender, EventArgs e)
        {
            

            
        }

        private void treeModules_AfterSelect(object sender, TreeViewEventArgs e)
        {
            Modules test = new Modules();
            if (!e.Node.IsExpanded)
            {
                string[] tmp = Directory.GetFiles(e.Node.FullPath);
                
                foreach (string a in tmp)
                {
                    if (a.Contains(".xml"))
                        test =Controller.getModuleGeneral(a);
                }
            }
            if (test != null)
            {
                showModuleInfo(test);
            }
            
        }
        private void showModuleInfo(Modules test)
        {

            lbAuthor.Text = test.Author;
            tbInfo.Text = test.Info;
            grbInfo.Text = test.MName;
        }

        private void tbName_TextChanged(object sender, EventArgs e)
        {
            if (tbName.Text != "")
                btn_next.Enabled = true;
            else
                btn_next.Enabled = false;
        }
    }
}
