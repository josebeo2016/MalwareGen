#pragma once
#include "VirtualBox.h"

/*
Registry key values
*/

void vbox_reg_key_value()
{
	/* Array of strings of blacklisted registry key values */
	char *szEntries[][3] = {
		{ "HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port 0\\Scsi Bus 0\\Target Id 0\\Logical Unit Id 0", "Identifier", "VBOX" },
		{ "HARDWARE\\Description\\System", "SystemBiosVersion", "VBOX" },
		{ "HARDWARE\\Description\\System", "VideoBiosVersion", "VIRTUALBOX" },
		{ "HARDWARE\\Description\\System", "SystemBiosDate", "06/23/99" }
	};

	WORD dwLength = sizeof(szEntries) / sizeof(szEntries[0]);

	for (int i = 0; i < dwLength; i++)
	{
		if (Is_RegKeyValueExists(HKEY_LOCAL_MACHINE, szEntries[i][0], szEntries[i][1], szEntries[i][2]))
			exit(1);
	}
}

/*
Check against virtualbox registry keys
*/
VOID vbox_reg_keys()
{
	/* Array of strings of blacklisted registry keys */
	char* szKeys[] = {
		"HARDWARE\\ACPI\\DSDT\\VBOX__",
		"HARDWARE\\ACPI\\FADT\\VBOX__",
		"HARDWARE\\ACPI\\RSDT\\VBOX__",
		"SOFTWARE\\Oracle\\VirtualBox Guest Additions",
		"SYSTEM\\ControlSet001\\Services\\VBoxGuest",
		"SYSTEM\\ControlSet001\\Services\\VBoxMouse",
		"SYSTEM\\ControlSet001\\Services\\VBoxService",
		"SYSTEM\\ControlSet001\\Services\\VBoxSF",
		"SYSTEM\\ControlSet001\\Services\\VBoxVideo"
	};

	WORD dwlength = sizeof(szKeys) / sizeof(szKeys[0]);

	/* Check one by one */
	for (int i = 0; i < dwlength; i++)
	{
		if (Is_RegKeyExists(HKEY_LOCAL_MACHINE, szKeys[i]))
			exit(1);
	}
}


/*
Check against virtualbox blacklisted files
*/
VOID vbox_files()
{
	/* Array of strings of blacklisted paths */
	char* szPaths[] = {
		"system32\\drivers\\VBoxMouse.sys",
		"system32\\drivers\\VBoxGuest.sys",
		"system32\\drivers\\VBoxSF.sys",
		"system32\\drivers\\VBoxVideo.sys",
		"system32\\vboxdisp.dll",
		"system32\\vboxhook.dll",
		"system32\\vboxmrxnp.dll",
		"system32\\vboxogl.dll",
		"system32\\vboxoglarrayspu.dll",
		"system32\\vboxoglcrutil.dll",
		"system32\\vboxoglerrorspu.dll",
		"system32\\vboxoglfeedbackspu.dll",
		"system32\\vboxoglpackspu.dll",
		"system32\\vboxoglpassthroughspu.dll",
		"system32\\vboxservice.exe",
		"system32\\vboxtray.exe",
		"system32\\VBoxControl.exe"
	};

	/* Getting Windows Directory */
	WORD dwlength = sizeof(szPaths) / sizeof(szPaths[0]);
	TCHAR szWinDir[MAX_PATH] = "";
	TCHAR szPath[MAX_PATH] = "";
	GetWindowsDirectory(szWinDir, MAX_PATH);

	/* Check one by one */
	for (int i = 0; i < dwlength; i++)
	{
		PathCombine(szPath, szWinDir, szPaths[i]);
		if (is_FileExists(szPath))
			exit(1);
	}
}


/*
Check against virtualbox blacklisted directories
*/
BOOL vbox_dir()
{
	char szProgramFile[MAX_PATH];
	char szPath[MAX_PATH] = "";
	char szTarget[MAX_PATH] = "oracle\\virtualbox guest additions\\";

	if (IsWoW64())
		ExpandEnvironmentStrings("%ProgramW6432%", szProgramFile, ARRAYSIZE(szProgramFile));
	else
		SHGetSpecialFolderPath(NULL, szProgramFile, CSIDL_PROGRAM_FILES, FALSE);

	PathCombine(szPath, szProgramFile, szTarget);
	return is_DirectoryExists(szPath);
}


/*
Check virtualbox NIC MAC address
*/
BOOL vbox_check_mac()
{
	// PCS Systemtechnik CmbH (VirtualBox)
	return check_mac_addr("\x08\x00\x27");
}

/*
Check for process list
*/

VOID vbox_processes()
{
	char *szProcesses[] = {
		"vboxservice.exe",
		"vboxtray.exe"
	};

	WORD iLength = sizeof(szProcesses) / sizeof(szProcesses[0]);
	for (int i = 0; i < iLength; i++)
	{
		if (GetProcessIdFromName(szProcesses[i]))
			exit(1);
	}
}