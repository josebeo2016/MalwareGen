#include <Windows.h>
#include "adbg_SingleStepException.h"

#define SHOW_DEBUG_MESSAGES

// =======================================================================
// Debugging helper
// =======================================================================
void DBG_MSG(char* message)
{
#ifdef SHOW_DEBUG_MESSAGES
	printf("[MSG-0x]: %s\n", message);
	printf("GAME OVER!");
#endif
}


/*
 * // adbg_SingleStepException()
 * 
 * // How it works:
 * ...
 *
 * // Indication:
 * ...
 *
 * // Bypass:
 * ...
 *
 */
void adbg_SingleStepException(void)
{
	DWORD found = TRUE;

	/*
	In this method we force an exception to occur. If it occurs
	outside of a debugger, the __except() handler is called setting
	found to FALSE. If the exception occurs inside of a debugger, the
	__except() will not be called (in certain cases) leading to
	found being TRUE.
	*/

	__try
	{
		_asm 
		{
			pushfd;						// save flag register
			or byte ptr[esp + 1], 1;	// set trap flag in EFlags
			popfd;						// restore flag register
		}
	}
	__except (EXCEPTION_EXECUTE_HANDLER)
	{
		found = FALSE;
	}

	if (found)
	{
		DBG_MSG("Caught by a Single Step Exception!");
		exit(1);
	}
}
