#include "adbg_RDTSC.h"

#define SHOW_DEBUG_MESSAGES

// =======================================================================
// Timing Checks
// These checks focus on comparison of time stamps between a portion
// of code which is likely to be analyzed under a debugger. The goal
// is to determine with high probability that a debugger is allowing
// single step control, or that a breakpoint had been hit between
// the time check locations.
// =======================================================================

/*
 * // adbg_RDTSC()
 *
 * // How it works:
 * ...
 *
 * // Indication:
 * ...
 *
 * // Bypass:
 * ...
 */
void adbg_RDTSC(void)
{
	BOOL found = FALSE;

	UINT64 timeA, timeB = 0;
	int timeUpperA, timeLowerA = 0;
	int timeUpperB, timeLowerB = 0;

	_asm
	{
		// rdtsc stores result across EDX:EAX
		rdtsc;
		mov timeUpperA, edx;
		mov timeLowerA, eax;

		// Junk code to entice stepping through or a breakpoint
		xor eax, eax;
		mov eax, 5;
		shr eax, 2;
		sub eax, ebx;
		cmp eax, ecx

		rdtsc;
		mov timeUpperB, edx;
		mov timeLowerB, eax;
	}

	timeA = timeUpperA;
	timeA = (timeA << 32) | timeLowerA;

	timeB = timeUpperB;
	timeB = (timeB << 32) | timeLowerB;

	/* 0x10000 is purely empirical and is based on the computer's clock cycle
	   This value should be change depending on the length and complexity of 
	   code between each RDTSC operation. */
	if (timeB - timeA > 0x10000)
	{
		found = TRUE;
	}

	if (found)
	{
		printf("Caught by RDTSC!");
		exit(1);
	}
}

